#include <iostream>
#include <string>

using namespace std;

void initBoard(char **, int);           // DONE
void printBoard(char **, int);          // TODO
void player(int, char *, int, char **); // TODO
void deleteBoard(char **, int);         // DONE

enum e_player_char { X, O };

int main() {
  const int t_size = 3;
  char player_char[2] = {'X', 'O'};
  bool gameRunning = true;

  char **t_board = new char *[t_size];
  for (int i = 0; i < t_size; i++) {
    t_board[i] = new char[t_size];
  }
  initBoard(t_board, t_size);

  cout << "Player 1 is X" << endl;
  cout << "Player 2 is O" << endl;
  cout << "Player 1 will start first" << endl;
  while (gameRunning) {
    for (int i = X; i < O + 1; i++) {
      printBoard(t_board, t_size);
      player(i, player_char, t_size, t_board);
    }
  }
  deleteBoard(t_board, t_size);
}

void initBoard(char **t_board, int t_size) {
  char board_num = '1';
  for (int i = 0; i < t_size; i++) {
    for (int j = 0; j < t_size; j++) {
      t_board[i][j] = board_num++;
    }
  }
}

void printBoard(char **t_board, int t_size) {
  for (int i = 0; i < t_size; i++) {
    for (int j = 0; j < t_size; j++) {
      if (j != 0)
        cout << " | ";
      cout << t_board[i][j];
    }
    if (i != 2)
      cout << "\n---------" << endl;
    else
      cout << endl;
  }
}

void player(int player_num, char *player_char, int t_size, char **t_board) {
  char player_input; // holds the position chosen by the user
  bool space_taken = true; // check if the current position is taken
  char current_position = '0'; // counter to be compared againist the position chosen
  cout << "Player " << player_num + 1 << " : " << endl;
  cin >> player_input;
  for (int i = 0; i < t_size; i++) {
    for (int j = 0; j < t_size; j++) {
      ++current_position; // increments pre-fix
      if (t_board[i][j] == player_input || (t_board[i][j] == player_char[X] || t_board[i][j] == player_char[O])) {
        while (space_taken) {
          if (t_board[i][j] != player_char[X] && t_board[i][j] != player_char[O]) { // TODO Check player_input
            t_board[i][j] = player_char[player_num];
            space_taken = !space_taken;
          } else {
            cout << "Space taken" << endl;
            cout << "Player " << player_num + 1 << " : " << endl;
            cin >> player_input;
          }
        }
      }
      // else {
      //   //cout << "i = " << i << " j " << j << endl;
      // }
    }
  }
}

void deleteBoard(char **t_board, int t_size) {
  for (int i = 0; i < t_size; i++) {
    delete[] t_board[i];
  }
  delete[] t_board;
}
